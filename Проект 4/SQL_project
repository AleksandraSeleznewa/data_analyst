База данных хранит информацию о венчурных фондах и инвестициях в компании-стартапы.
Эта база данных основана на датасете Startup Investments, опубликованном на платформе Kaggle.

В базе данных - 7 таблиц:
- acquisition
- company
- education
- fund
- funding_round
- investment
- people

**Задача проекта** - проанализировать данные о фондах и инвестициях и составить запросы к базе.

**ЗАДАНИЕ 1**
Отобразите все записи из таблицы company по компаниям, которые закрылись.

```
SELECT *
FROM company
WHERE status = 'closed'
```

**ЗАДАНИЕ 2**
Отобразите количество привлечённых средств для новостных компаний США. Используйте данные из таблицы company. Отсортируйте таблицу по убыванию значений в поле funding_total.


```
SELECT funding_total
FROM company
WHERE category_code = 'news'
    AND country_code = 'USA'
ORDER BY funding_total DESC
```

**ЗАДАНИЕ 3**
Найдите общую сумму сделок по покупке одних компаний другими в долларах. Отберите сделки, которые осуществлялись только за наличные с 2011 по 2013 год включительно.

```
SELECT SUM(price_amount)
FROM acquisition
WHERE term_code = 'cash'
    AND EXTRACT(YEAR FROM acquired_at) BETWEEN 2011 AND 2013
```

**ЗАДАНИЕ 4**
Отобразите имя, фамилию и названия аккаунтов людей в поле network_username, у которых названия аккаунтов начинаются на 'Silver'.

```
SELECT first_name, last_name, network_username
FROM people
WHERE network_username LIKE 'Silver%'
```

**ЗАДАНИЕ 5**
Выведите на экран всю информацию о людях, у которых названия аккаунтов в поле network_username содержат подстроку 'money', а фамилия начинается на 'K'.

```
SELECT *
FROM people
WHERE network_username LIKE '%money%'
AND last_name LIKE 'K%'
```

**ЗАДАНИЕ 6**
Для каждой страны отобразите общую сумму привлечённых инвестиций, которые получили компании, зарегистрированные в этой стране. Страну, в которой зарегистрирована компания, можно определить по коду страны. Отсортируйте данные по убыванию суммы.

```
SELECT country_code, SUM(funding_total) AS total_funding
FROM company
GROUP BY country_code
ORDER BY total_funding DESC
```

**ЗАДАНИЕ 7**
Составьте таблицу, в которую войдёт дата проведения раунда, а также минимальное и максимальное значения суммы инвестиций, привлечённых в эту дату.
Оставьте в итоговой таблице только те записи, в которых минимальное значение суммы инвестиций не равно нулю и не равно максимальному значению.

```
SELECT funded_at, MIN(raised_amount), MAX(raised_amount)
FROM funding_round
GROUP BY funded_at
HAVING MIN(raised_amount) != 0
AND MIN(raised_amount) != MAX(raised_amount)
```

**ЗАДАНИЕ 8**
Создайте поле с категориями:
- Для фондов, которые инвестируют в 100 и более компаний, назначьте категорию high_activity.
- Для фондов, которые инвестируют в 20 и более компаний до 100, назначьте категорию middle_activity.
- Если количество инвестируемых компаний фонда не достигает 20, назначьте категорию low_activity.
Отобразите все поля таблицы fund и новое поле с категориями.

```
SELECT *,
    (CASE
        WHEN invested_companies >= 100
            THEN 'high_activity'
        WHEN invested_companies < 100 and invested_companies >= 20
            THEN 'middle_activity'
        WHEN invested_companies < 20
            THEN 'low_activity'
    END) AS category
FROM fund
```

**ЗАДАНИЕ 9**
Для каждой из категорий, назначенных в предыдущем задании, посчитайте округлённое до ближайшего целого числа среднее количество инвестиционных раундов, в которых фонд принимал участие. Выведите на экран категории и среднее число инвестиционных раундов. Отсортируйте таблицу по возрастанию среднего.

```
WITH a AS (SELECT *,
       CASE
           WHEN invested_companies>=100 THEN 'high_activity'
           WHEN invested_companies>=20 THEN 'middle_activity'
           ELSE 'low_activity'
       END AS activity
FROM fund)

SELECT activity, ROUND(AVG(investment_rounds)) as avg
FROM a
GROUP BY activity
ORDER BY avg
```

**ЗАДАНИЕ 10**
Проанализируйте, в каких странах находятся фонды, которые чаще всего инвестируют в стартапы. 
Для каждой страны посчитайте минимальное, максимальное и среднее число компаний, в которые инвестировали фонды этой страны, основанные с 2010 по 2012 год включительно. Исключите страны с фондами, у которых минимальное число компаний, получивших инвестиции, равно нулю. 
Выгрузите десять самых активных стран-инвесторов: отсортируйте таблицу по среднему количеству компаний от большего к меньшему. Затем добавьте сортировку по коду страны в лексикографическом порядке.

```
SELECT country_code,
       MIN(invested_companies),
       MAX(invested_companies),
       AVG(invested_companies)
FROM fund
WHERE EXTRACT(YEAR FROM founded_at) BETWEEN 2010 AND 2012
GROUP BY country_code
HAVING MIN(invested_companies) != 0
ORDER BY AVG(invested_companies) DESC, country_code
LIMIT 10
```

**ЗАДАНИЕ 11**
Отобразите имя и фамилию всех сотрудников стартапов. Добавьте поле с названием учебного заведения, которое окончил сотрудник, если эта информация известна.

```
SELECT p.first_name, p.last_name, e.instituition
FROM people AS p
LEFT JOIN education AS e ON e.person_id = p.id
```

**ЗАДАНИЕ 12**
Для каждой компании найдите количество учебных заведений, которые окончили её сотрудники. Выведите название компании и число уникальных названий учебных заведений. Составьте топ-5 компаний по количеству университетов.

```
SELECT c.name AS company, COUNT(DISTINCT e.instituition) AS inst_number
FROM company AS c
JOIN people AS p ON p.company_id = c.id
JOIN education AS e on e.person_id = p.id
GROUP BY company
ORDER BY inst_number DESC
LIMIT 5
```

**ЗАДАНИЕ 13**
Составьте список с уникальными названиями закрытых компаний, для которых первый раунд финансирования оказался последним.

```
SELECT DISTINCT name
FROM company AS c
JOIN funding_round AS fr ON fr.company_id = c.id
WHERE c.status = 'closed'
    AND fr.is_first_round = 1
    AND fr.is_last_round = 1
```

**ЗАДАНИЕ 14**
Составьте список уникальных номеров сотрудников, которые работают в компаниях, отобранных в предыдущем задании.

```
WITH closed_companies AS (
    SELECT c.name AS company, p.id AS person_id
    FROM company AS c
    JOIN funding_round AS fr ON fr.company_id = c.id
    JOIN people AS p ON p.company_id = c.id
    WHERE c.status = 'closed'
        AND fr.is_first_round = 1
        AND fr.is_last_round = 1
)

SELECT DISTINCT p.id
FROM people AS p
JOIN closed_companies AS closed ON closed.person_id = p.id
```

**ЗАДАНИЕ 15**
Составьте таблицу, куда войдут уникальные пары с номерами сотрудников из предыдущей задачи и учебным заведением, которое окончил сотрудник.

```
WITH closed_companies AS (
    SELECT c.name AS company, p.id AS person_id
    FROM company AS c
    JOIN funding_round AS fr ON fr.company_id = c.id
    JOIN people AS p ON p.company_id = c.id
    WHERE c.status = 'closed'
        AND fr.is_first_round = 1
        AND fr.is_last_round = 1
)

SELECT DISTINCT p.id AS id, e.instituition
FROM people AS p
JOIN closed_companies AS closed ON closed.person_id = p.id
JOIN education AS e ON e.person_id = closed.person_id
```

**ЗАДАНИЕ 16**
Посчитайте количество учебных заведений для каждого сотрудника из предыдущего задания. При подсчёте учитывайте, что некоторые сотрудники могли окончить одно и то же заведение дважды.

```
SELECT DISTINCT p.id AS id,
       COUNT(e.instituition)
FROM people AS p
JOIN education AS e ON e.person_id = p.id
WHERE p.id IN (SELECT p.id AS person_id
    FROM company AS c
    JOIN funding_round AS fr ON fr.company_id = c.id
    JOIN people AS p ON p.company_id = c.id
    WHERE c.status = 'closed'
        AND fr.is_first_round = 1
        AND fr.is_last_round = 1)
GROUP BY p.id
```

**ЗАДАНИЕ 17**
Дополните предыдущий запрос и выведите среднее число учебных заведений (всех, не только уникальных), которые окончили сотрудники разных компаний. Нужно вывести только одну запись, группировка здесь не понадобится.

```
WITH ed_count AS (SELECT DISTINCT p.id AS id,
       COUNT(e.instituition)
FROM people AS p
JOIN education AS e ON e.person_id = p.id
WHERE p.id IN (SELECT p.id AS person_id
    FROM company AS c
    JOIN funding_round AS fr ON fr.company_id = c.id
    JOIN people AS p ON p.company_id = c.id
    WHERE c.status = 'closed'
        AND fr.is_first_round = 1
        AND fr.is_last_round = 1)
GROUP BY p.id)

SELECT AVG(COUNT)
FROM ed_count
```

**ЗАДАНИЕ 18**
Напишите похожий запрос: выведите среднее число учебных заведений (всех, не только уникальных), которые окончили сотрудники Socialnet.

```
WITH socialnet AS (SELECT DISTINCT p.id AS id,
       COUNT(e.instituition)
FROM people AS p
JOIN education AS e ON e.person_id = p.id
WHERE p.id IN (SELECT p.id AS person_id
    FROM company AS c
    JOIN funding_round AS fr ON fr.company_id = c.id
    JOIN people AS p ON p.company_id = c.id
    WHERE c.name = 'Socialnet')
GROUP BY p.id)

SELECT AVG(COUNT)
FROM socialnet
```

**ЗАДАНИЕ 19**
Составьте таблицу из полей:
- name_of_fund — название фонда;
- name_of_company — название компании;
- amount — сумма инвестиций, которую привлекла компания в раунде.
В таблицу войдут данные о компаниях, в истории которых было больше шести важных этапов, а раунды финансирования проходили с 2012 по 2013 год включительно.

```
SELECT f.name AS name_of_fund,
       c.name AS name_of_company,
       fr.raised_amount AS amount
FROM investment AS i
LEFT JOIN fund AS f ON i.fund_id = f.id
LEFT JOIN company AS c ON c.id = i.company_id
JOIN funding_round AS fr ON fr.id = i.funding_round_id

WHERE c.milestones > 6
    AND EXTRACT(YEAR FROM fr.funded_at) BETWEEN 2012 AND 2013
```

**ЗАДАНИЕ 20**
Выгрузите таблицу, в которой будут такие поля:
- название компании-покупателя;
- сумма сделки;
- название компании, которую купили;
- сумма инвестиций, вложенных в купленную компанию;
- доля, которая отображает, во сколько раз сумма покупки превысила сумму вложенных в компанию инвестиций, округлённая до ближайшего целого числа.
Не учитывайте те сделки, в которых сумма покупки равна нулю. Если сумма инвестиций в компанию равна нулю, исключите такую компанию из таблицы. 
Отсортируйте таблицу по сумме сделки от большей к меньшей, а затем по названию купленной компании в лексикографическом порядке. Ограничьте таблицу первыми десятью записями.

```
WITH

acquiring_ids AS (SELECT a.id AS acquisition_id,
                  c.name AS acquiring_company_name,
                  a.price_amount AS amount
                  FROM company AS c
                  JOIN acquisition AS a ON a.acquiring_company_id = c.id),

acquired_ids AS (SELECT a.id AS acquisition_id,
                 c.name AS acquired_company_name,
                 c.funding_total AS funding_total
                 FROM company AS c
                 JOIN acquisition AS a ON a.acquired_company_id = c.id)

SELECT acquiring_ids.acquiring_company_name AS acquiring_company_name,
       acquiring_ids.amount AS amount,
       acquired_ids.acquired_company_name AS acquired_company_name,
       acquired_ids.funding_total AS funding_total,
       ROUND(acquiring_ids.amount/acquired_ids.funding_total)
FROM acquiring_ids
JOIN acquired_ids
    ON acquiring_ids.acquisition_id = acquired_ids.acquisition_id

WHERE funding_total != 0

ORDER BY amount DESC, acquired_company_name
LIMIT 10
```

**ЗАДАНИЕ 21**
Выгрузите таблицу, в которую войдут названия компаний из категории social, получившие финансирование с 2010 по 2013 год включительно. Проверьте, что сумма инвестиций не равна нулю. Выведите также номер месяца, в котором проходил раунд финансирования.

```
SELECT c.name, EXTRACT(MONTH FROM fr.funded_at) AS month
FROM company AS c
JOIN funding_round AS fr ON fr.company_id = c.id

WHERE c.category_code = 'social'
    AND EXTRACT(YEAR FROM fr.funded_at) BETWEEN 2010 AND 2013
    AND fr.raised_amount != 0
```

**ЗАДАНИЕ 22**
Отберите данные по месяцам с 2010 по 2013 год, когда проходили инвестиционные раунды. Сгруппируйте данные по номеру месяца и получите таблицу, в которой будут поля:
- номер месяца, в котором проходили раунды;
- количество уникальных названий фондов из США, которые инвестировали в этом месяце;
- количество компаний, купленных за этот месяц;
- общая сумма сделок по покупкам в этом месяце.

```
WITH

USA_funds_per_month AS (
    SELECT EXTRACT(MONTH FROM fr.funded_at) AS month,
           COUNT(DISTINCT f.name) AS USA_fund_count
    FROM funding_round AS fr
    LEFT JOIN investment AS i ON i.funding_round_id = fr.id
    LEFT JOIN fund AS f ON f.id = i.fund_id
    WHERE EXTRACT(YEAR FROM fr.funded_at) BETWEEN 2010 AND 2013
        AND f.country_code = 'USA'
    GROUP BY MONTH),

acquisitions AS (
    SELECT EXTRACT(MONTH FROM acquired_at) AS month,
           COUNT(acquired_company_id) AS acquired_company_count,
           SUM(price_amount) AS total_price_amount
    FROM acquisition
    WHERE EXTRACT(YEAR FROM acquired_at) between 2010 and 2013
    GROUP BY MONTH)

SELECT USA_funds_per_month.month,
       USA_funds_per_month.usa_fund_count,
       acquisitions.acquired_company_count,
       acquisitions.total_price_amount
FROM USA_funds_per_month
JOIN acquisitions
    ON acquisitions.month = USA_funds_per_month.month
```

**ЗАДАНИЕ 23**
Составьте сводную таблицу и выведите среднюю сумму инвестиций для стран, в которых есть стартапы, зарегистрированные в 2011, 2012 и 2013 годах. Данные за каждый год должны быть в отдельном поле. Отсортируйте таблицу по среднему значению инвестиций за 2011 год от большего к меньшему.

```
SELECT u.country_code,
    SUM(CASE WHEN u.y=2011 THEN u.funding_total ELSE 0 END) ft11,
    SUM(CASE WHEN u.y=2012 THEN u.funding_total ELSE 0 END) ft12,
    SUM(CASE WHEN u.y=2013 THEN u.funding_total ELSE 0 END) ft13
  FROM (
    SELECT country_code,AVG(funding_total) AS funding_total,EXTRACT(YEAR FROM founded_at) y
      FROM company
      WHERE EXTRACT(YEAR FROM founded_at) BETWEEN 2011 AND 2013
      GROUP BY country_code,EXTRACT(YEAR FROM founded_at)) u
  GROUP BY u.country_code
  ORDER BY ft11 desc
```
